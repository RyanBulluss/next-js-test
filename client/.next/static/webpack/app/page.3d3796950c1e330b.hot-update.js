/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "?fe98":
/*!**************************************!*\
  !*** ./terminal-highlight (ignored) ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/picocolors/picocolors.browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/picocolors/picocolors.browser.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar x = String;\nvar create = function() {\n    return {\n        isColorSupported: false,\n        reset: x,\n        bold: x,\n        dim: x,\n        italic: x,\n        underline: x,\n        inverse: x,\n        hidden: x,\n        strikethrough: x,\n        black: x,\n        red: x,\n        green: x,\n        yellow: x,\n        blue: x,\n        magenta: x,\n        cyan: x,\n        white: x,\n        gray: x,\n        bgBlack: x,\n        bgRed: x,\n        bgGreen: x,\n        bgYellow: x,\n        bgBlue: x,\n        bgMagenta: x,\n        bgCyan: x,\n        bgWhite: x\n    };\n};\nmodule.exports = create();\nmodule.exports.createColors = create;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9waWNvY29sb3JzL3BpY29jb2xvcnMuYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsSUFBRUM7QUFDTixJQUFJQyxTQUFPO0lBQVksT0FBTztRQUFDQyxrQkFBaUI7UUFBTUMsT0FBTUo7UUFBRUssTUFBS0w7UUFBRU0sS0FBSU47UUFBRU8sUUFBT1A7UUFBRVEsV0FBVVI7UUFBRVMsU0FBUVQ7UUFBRVUsUUFBT1Y7UUFBRVcsZUFBY1g7UUFBRVksT0FBTVo7UUFBRWEsS0FBSWI7UUFBRWMsT0FBTWQ7UUFBRWUsUUFBT2Y7UUFBRWdCLE1BQUtoQjtRQUFFaUIsU0FBUWpCO1FBQUVrQixNQUFLbEI7UUFBRW1CLE9BQU1uQjtRQUFFb0IsTUFBS3BCO1FBQUVxQixTQUFRckI7UUFBRXNCLE9BQU10QjtRQUFFdUIsU0FBUXZCO1FBQUV3QixVQUFTeEI7UUFBRXlCLFFBQU96QjtRQUFFMEIsV0FBVTFCO1FBQUUyQixRQUFPM0I7UUFBRTRCLFNBQVE1QjtJQUFDO0FBQUM7QUFDeFI2QixPQUFPQyxPQUFPLEdBQUM1QjtBQUNmMkIsMkJBQTJCLEdBQUczQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcGljb2NvbG9ycy9waWNvY29sb3JzLmJyb3dzZXIuanM/ZmFhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgeD1TdHJpbmc7XG52YXIgY3JlYXRlPWZ1bmN0aW9uKCkge3JldHVybiB7aXNDb2xvclN1cHBvcnRlZDpmYWxzZSxyZXNldDp4LGJvbGQ6eCxkaW06eCxpdGFsaWM6eCx1bmRlcmxpbmU6eCxpbnZlcnNlOngsaGlkZGVuOngsc3RyaWtldGhyb3VnaDp4LGJsYWNrOngscmVkOngsZ3JlZW46eCx5ZWxsb3c6eCxibHVlOngsbWFnZW50YTp4LGN5YW46eCx3aGl0ZTp4LGdyYXk6eCxiZ0JsYWNrOngsYmdSZWQ6eCxiZ0dyZWVuOngsYmdZZWxsb3c6eCxiZ0JsdWU6eCxiZ01hZ2VudGE6eCxiZ0N5YW46eCxiZ1doaXRlOnh9fTtcbm1vZHVsZS5leHBvcnRzPWNyZWF0ZSgpO1xubW9kdWxlLmV4cG9ydHMuY3JlYXRlQ29sb3JzID0gY3JlYXRlO1xuIl0sIm5hbWVzIjpbIngiLCJTdHJpbmciLCJjcmVhdGUiLCJpc0NvbG9yU3VwcG9ydGVkIiwicmVzZXQiLCJib2xkIiwiZGltIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsImhpZGRlbiIsInN0cmlrZXRocm91Z2giLCJibGFjayIsInJlZCIsImdyZWVuIiwieWVsbG93IiwiYmx1ZSIsIm1hZ2VudGEiLCJjeWFuIiwid2hpdGUiLCJncmF5IiwiYmdCbGFjayIsImJnUmVkIiwiYmdHcmVlbiIsImJnWWVsbG93IiwiYmdCbHVlIiwiYmdNYWdlbnRhIiwiYmdDeWFuIiwiYmdXaGl0ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVDb2xvcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/picocolors/picocolors.browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/comment.js":
/*!*********************************************!*\
  !*** ./node_modules/postcss/lib/comment.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nlet Node = __webpack_require__(/*! ./node */ \"(app-pages-browser)/./node_modules/postcss/lib/node.js\");\nclass Comment extends Node {\n    constructor(defaults){\n        super(defaults);\n        this.type = \"comment\";\n    }\n}\nmodule.exports = Comment;\nComment.default = Comment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9jb21tZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFbkIsTUFBTUMsZ0JBQWdCRjtJQUNwQkcsWUFBWUMsUUFBUSxDQUFFO1FBQ3BCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLElBQUksR0FBRztJQUNkO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHTDtBQUNqQkEsUUFBUU0sT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvY29tbWVudC5qcz8zZjgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5sZXQgTm9kZSA9IHJlcXVpcmUoJy4vbm9kZScpXG5cbmNsYXNzIENvbW1lbnQgZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAnY29tbWVudCdcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbW1lbnRcbkNvbW1lbnQuZGVmYXVsdCA9IENvbW1lbnRcbiJdLCJuYW1lcyI6WyJOb2RlIiwicmVxdWlyZSIsIkNvbW1lbnQiLCJjb25zdHJ1Y3RvciIsImRlZmF1bHRzIiwidHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/comment.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/css-syntax-error.js":
/*!******************************************************!*\
  !*** ./node_modules/postcss/lib/css-syntax-error.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nlet pico = __webpack_require__(/*! picocolors */ \"(app-pages-browser)/./node_modules/picocolors/picocolors.browser.js\");\nlet terminalHighlight = __webpack_require__(/*! ./terminal-highlight */ \"?fe98\");\nclass CssSyntaxError extends Error {\n    setMessage() {\n        this.message = this.plugin ? this.plugin + \": \" : \"\";\n        this.message += this.file ? this.file : \"<css input>\";\n        if (typeof this.line !== \"undefined\") {\n            this.message += \":\" + this.line + \":\" + this.column;\n        }\n        this.message += \": \" + this.reason;\n    }\n    showSourceCode(color) {\n        if (!this.source) return \"\";\n        let css = this.source;\n        if (color == null) color = pico.isColorSupported;\n        if (terminalHighlight) {\n            if (color) css = terminalHighlight(css);\n        }\n        let lines = css.split(/\\r?\\n/);\n        let start = Math.max(this.line - 3, 0);\n        let end = Math.min(this.line + 2, lines.length);\n        let maxWidth = String(end).length;\n        let mark, aside;\n        if (color) {\n            let { bold, gray, red } = pico.createColors(true);\n            mark = (text)=>bold(red(text));\n            aside = (text)=>gray(text);\n        } else {\n            mark = aside = (str)=>str;\n        }\n        return lines.slice(start, end).map((line, index)=>{\n            let number = start + 1 + index;\n            let gutter = \" \" + (\" \" + number).slice(-maxWidth) + \" | \";\n            if (number === this.line) {\n                let spacing = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, this.column - 1).replace(/[^\\t]/g, \" \");\n                return mark(\">\") + aside(gutter) + line + \"\\n \" + spacing + mark(\"^\");\n            }\n            return \" \" + aside(gutter) + line;\n        }).join(\"\\n\");\n    }\n    toString() {\n        let code = this.showSourceCode();\n        if (code) {\n            code = \"\\n\\n\" + code + \"\\n\";\n        }\n        return this.name + \": \" + this.message + code;\n    }\n    constructor(message, line, column, source, file, plugin){\n        super(message);\n        this.name = \"CssSyntaxError\";\n        this.reason = message;\n        if (file) {\n            this.file = file;\n        }\n        if (source) {\n            this.source = source;\n        }\n        if (plugin) {\n            this.plugin = plugin;\n        }\n        if (typeof line !== \"undefined\" && typeof column !== \"undefined\") {\n            if (typeof line === \"number\") {\n                this.line = line;\n                this.column = column;\n            } else {\n                this.line = line.line;\n                this.column = line.column;\n                this.endLine = column.line;\n                this.endColumn = column.column;\n            }\n        }\n        this.setMessage();\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, CssSyntaxError);\n        }\n    }\n}\nmodule.exports = CssSyntaxError;\nCssSyntaxError.default = CssSyntaxError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9jc3Mtc3ludGF4LWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFbkIsSUFBSUMsb0JBQW9CRCxtQkFBT0EsQ0FBQztBQUVoQyxNQUFNRSx1QkFBdUJDO0lBa0MzQkMsYUFBYTtRQUNYLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTSxHQUFHLE9BQU87UUFDbEQsSUFBSSxDQUFDRCxPQUFPLElBQUksSUFBSSxDQUFDRSxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLEdBQUc7UUFDeEMsSUFBSSxPQUFPLElBQUksQ0FBQ0MsSUFBSSxLQUFLLGFBQWE7WUFDcEMsSUFBSSxDQUFDSCxPQUFPLElBQUksTUFBTSxJQUFJLENBQUNHLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQ0MsTUFBTTtRQUNyRDtRQUNBLElBQUksQ0FBQ0osT0FBTyxJQUFJLE9BQU8sSUFBSSxDQUFDSyxNQUFNO0lBQ3BDO0lBRUFDLGVBQWVDLEtBQUssRUFBRTtRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDQyxNQUFNLEVBQUUsT0FBTztRQUV6QixJQUFJQyxNQUFNLElBQUksQ0FBQ0QsTUFBTTtRQUNyQixJQUFJRCxTQUFTLE1BQU1BLFFBQVFiLEtBQUtnQixnQkFBZ0I7UUFDaEQsSUFBSWQsbUJBQW1CO1lBQ3JCLElBQUlXLE9BQU9FLE1BQU1iLGtCQUFrQmE7UUFDckM7UUFFQSxJQUFJRSxRQUFRRixJQUFJRyxLQUFLLENBQUM7UUFDdEIsSUFBSUMsUUFBUUMsS0FBS0MsR0FBRyxDQUFDLElBQUksQ0FBQ1osSUFBSSxHQUFHLEdBQUc7UUFDcEMsSUFBSWEsTUFBTUYsS0FBS0csR0FBRyxDQUFDLElBQUksQ0FBQ2QsSUFBSSxHQUFHLEdBQUdRLE1BQU1PLE1BQU07UUFFOUMsSUFBSUMsV0FBV0MsT0FBT0osS0FBS0UsTUFBTTtRQUVqQyxJQUFJRyxNQUFNQztRQUNWLElBQUlmLE9BQU87WUFDVCxJQUFJLEVBQUVnQixJQUFJLEVBQUVDLElBQUksRUFBRUMsR0FBRyxFQUFFLEdBQUcvQixLQUFLZ0MsWUFBWSxDQUFDO1lBQzVDTCxPQUFPTSxDQUFBQSxPQUFRSixLQUFLRSxJQUFJRTtZQUN4QkwsUUFBUUssQ0FBQUEsT0FBUUgsS0FBS0c7UUFDdkIsT0FBTztZQUNMTixPQUFPQyxRQUFRTSxDQUFBQSxNQUFPQTtRQUN4QjtRQUVBLE9BQU9qQixNQUNKa0IsS0FBSyxDQUFDaEIsT0FBT0csS0FDYmMsR0FBRyxDQUFDLENBQUMzQixNQUFNNEI7WUFDVixJQUFJQyxTQUFTbkIsUUFBUSxJQUFJa0I7WUFDekIsSUFBSUUsU0FBUyxNQUFNLENBQUMsTUFBTUQsTUFBSyxFQUFHSCxLQUFLLENBQUMsQ0FBQ1YsWUFBWTtZQUNyRCxJQUFJYSxXQUFXLElBQUksQ0FBQzdCLElBQUksRUFBRTtnQkFDeEIsSUFBSStCLFVBQ0ZaLE1BQU1XLE9BQU9FLE9BQU8sQ0FBQyxPQUFPLFFBQzVCaEMsS0FBSzBCLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQ3pCLE1BQU0sR0FBRyxHQUFHK0IsT0FBTyxDQUFDLFVBQVU7Z0JBQ25ELE9BQU9kLEtBQUssT0FBT0MsTUFBTVcsVUFBVTlCLE9BQU8sUUFBUStCLFVBQVViLEtBQUs7WUFDbkU7WUFDQSxPQUFPLE1BQU1DLE1BQU1XLFVBQVU5QjtRQUMvQixHQUNDaUMsSUFBSSxDQUFDO0lBQ1Y7SUFFQUMsV0FBVztRQUNULElBQUlDLE9BQU8sSUFBSSxDQUFDaEMsY0FBYztRQUM5QixJQUFJZ0MsTUFBTTtZQUNSQSxPQUFPLFNBQVNBLE9BQU87UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ0MsSUFBSSxHQUFHLE9BQU8sSUFBSSxDQUFDdkMsT0FBTyxHQUFHc0M7SUFDM0M7SUF4RkFFLFlBQVl4QyxPQUFPLEVBQUVHLElBQUksRUFBRUMsTUFBTSxFQUFFSSxNQUFNLEVBQUVOLElBQUksRUFBRUQsTUFBTSxDQUFFO1FBQ3ZELEtBQUssQ0FBQ0Q7UUFDTixJQUFJLENBQUN1QyxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNsQyxNQUFNLEdBQUdMO1FBRWQsSUFBSUUsTUFBTTtZQUNSLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtRQUNkO1FBQ0EsSUFBSU0sUUFBUTtZQUNWLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNoQjtRQUNBLElBQUlQLFFBQVE7WUFDVixJQUFJLENBQUNBLE1BQU0sR0FBR0E7UUFDaEI7UUFDQSxJQUFJLE9BQU9FLFNBQVMsZUFBZSxPQUFPQyxXQUFXLGFBQWE7WUFDaEUsSUFBSSxPQUFPRCxTQUFTLFVBQVU7Z0JBQzVCLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtnQkFDWixJQUFJLENBQUNDLE1BQU0sR0FBR0E7WUFDaEIsT0FBTztnQkFDTCxJQUFJLENBQUNELElBQUksR0FBR0EsS0FBS0EsSUFBSTtnQkFDckIsSUFBSSxDQUFDQyxNQUFNLEdBQUdELEtBQUtDLE1BQU07Z0JBQ3pCLElBQUksQ0FBQ3FDLE9BQU8sR0FBR3JDLE9BQU9ELElBQUk7Z0JBQzFCLElBQUksQ0FBQ3VDLFNBQVMsR0FBR3RDLE9BQU9BLE1BQU07WUFDaEM7UUFDRjtRQUVBLElBQUksQ0FBQ0wsVUFBVTtRQUVmLElBQUlELE1BQU02QyxpQkFBaUIsRUFBRTtZQUMzQjdDLE1BQU02QyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUU5QztRQUNoQztJQUNGO0FBMERGO0FBRUErQyxPQUFPQyxPQUFPLEdBQUdoRDtBQUNqQkEsZUFBZWlELE9BQU8sR0FBR2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9jc3Mtc3ludGF4LWVycm9yLmpzPzExNzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmxldCBwaWNvID0gcmVxdWlyZSgncGljb2NvbG9ycycpXG5cbmxldCB0ZXJtaW5hbEhpZ2hsaWdodCA9IHJlcXVpcmUoJy4vdGVybWluYWwtaGlnaGxpZ2h0JylcblxuY2xhc3MgQ3NzU3ludGF4RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGxpbmUsIGNvbHVtbiwgc291cmNlLCBmaWxlLCBwbHVnaW4pIHtcbiAgICBzdXBlcihtZXNzYWdlKVxuICAgIHRoaXMubmFtZSA9ICdDc3NTeW50YXhFcnJvcidcbiAgICB0aGlzLnJlYXNvbiA9IG1lc3NhZ2VcblxuICAgIGlmIChmaWxlKSB7XG4gICAgICB0aGlzLmZpbGUgPSBmaWxlXG4gICAgfVxuICAgIGlmIChzb3VyY2UpIHtcbiAgICAgIHRoaXMuc291cmNlID0gc291cmNlXG4gICAgfVxuICAgIGlmIChwbHVnaW4pIHtcbiAgICAgIHRoaXMucGx1Z2luID0gcGx1Z2luXG4gICAgfVxuICAgIGlmICh0eXBlb2YgbGluZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNvbHVtbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmICh0eXBlb2YgbGluZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5saW5lID0gbGluZVxuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5saW5lID0gbGluZS5saW5lXG4gICAgICAgIHRoaXMuY29sdW1uID0gbGluZS5jb2x1bW5cbiAgICAgICAgdGhpcy5lbmRMaW5lID0gY29sdW1uLmxpbmVcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBjb2x1bW4uY29sdW1uXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zZXRNZXNzYWdlKClcblxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgQ3NzU3ludGF4RXJyb3IpXG4gICAgfVxuICB9XG5cbiAgc2V0TWVzc2FnZSgpIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSB0aGlzLnBsdWdpbiA/IHRoaXMucGx1Z2luICsgJzogJyA6ICcnXG4gICAgdGhpcy5tZXNzYWdlICs9IHRoaXMuZmlsZSA/IHRoaXMuZmlsZSA6ICc8Y3NzIGlucHV0PidcbiAgICBpZiAodHlwZW9mIHRoaXMubGluZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRoaXMubWVzc2FnZSArPSAnOicgKyB0aGlzLmxpbmUgKyAnOicgKyB0aGlzLmNvbHVtblxuICAgIH1cbiAgICB0aGlzLm1lc3NhZ2UgKz0gJzogJyArIHRoaXMucmVhc29uXG4gIH1cblxuICBzaG93U291cmNlQ29kZShjb2xvcikge1xuICAgIGlmICghdGhpcy5zb3VyY2UpIHJldHVybiAnJ1xuXG4gICAgbGV0IGNzcyA9IHRoaXMuc291cmNlXG4gICAgaWYgKGNvbG9yID09IG51bGwpIGNvbG9yID0gcGljby5pc0NvbG9yU3VwcG9ydGVkXG4gICAgaWYgKHRlcm1pbmFsSGlnaGxpZ2h0KSB7XG4gICAgICBpZiAoY29sb3IpIGNzcyA9IHRlcm1pbmFsSGlnaGxpZ2h0KGNzcylcbiAgICB9XG5cbiAgICBsZXQgbGluZXMgPSBjc3Muc3BsaXQoL1xccj9cXG4vKVxuICAgIGxldCBzdGFydCA9IE1hdGgubWF4KHRoaXMubGluZSAtIDMsIDApXG4gICAgbGV0IGVuZCA9IE1hdGgubWluKHRoaXMubGluZSArIDIsIGxpbmVzLmxlbmd0aClcblxuICAgIGxldCBtYXhXaWR0aCA9IFN0cmluZyhlbmQpLmxlbmd0aFxuXG4gICAgbGV0IG1hcmssIGFzaWRlXG4gICAgaWYgKGNvbG9yKSB7XG4gICAgICBsZXQgeyBib2xkLCBncmF5LCByZWQgfSA9IHBpY28uY3JlYXRlQ29sb3JzKHRydWUpXG4gICAgICBtYXJrID0gdGV4dCA9PiBib2xkKHJlZCh0ZXh0KSlcbiAgICAgIGFzaWRlID0gdGV4dCA9PiBncmF5KHRleHQpXG4gICAgfSBlbHNlIHtcbiAgICAgIG1hcmsgPSBhc2lkZSA9IHN0ciA9PiBzdHJcbiAgICB9XG5cbiAgICByZXR1cm4gbGluZXNcbiAgICAgIC5zbGljZShzdGFydCwgZW5kKVxuICAgICAgLm1hcCgobGluZSwgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IG51bWJlciA9IHN0YXJ0ICsgMSArIGluZGV4XG4gICAgICAgIGxldCBndXR0ZXIgPSAnICcgKyAoJyAnICsgbnVtYmVyKS5zbGljZSgtbWF4V2lkdGgpICsgJyB8ICdcbiAgICAgICAgaWYgKG51bWJlciA9PT0gdGhpcy5saW5lKSB7XG4gICAgICAgICAgbGV0IHNwYWNpbmcgPVxuICAgICAgICAgICAgYXNpZGUoZ3V0dGVyLnJlcGxhY2UoL1xcZC9nLCAnICcpKSArXG4gICAgICAgICAgICBsaW5lLnNsaWNlKDAsIHRoaXMuY29sdW1uIC0gMSkucmVwbGFjZSgvW15cXHRdL2csICcgJylcbiAgICAgICAgICByZXR1cm4gbWFyaygnPicpICsgYXNpZGUoZ3V0dGVyKSArIGxpbmUgKyAnXFxuICcgKyBzcGFjaW5nICsgbWFyaygnXicpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcgJyArIGFzaWRlKGd1dHRlcikgKyBsaW5lXG4gICAgICB9KVxuICAgICAgLmpvaW4oJ1xcbicpXG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICBsZXQgY29kZSA9IHRoaXMuc2hvd1NvdXJjZUNvZGUoKVxuICAgIGlmIChjb2RlKSB7XG4gICAgICBjb2RlID0gJ1xcblxcbicgKyBjb2RlICsgJ1xcbidcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmFtZSArICc6ICcgKyB0aGlzLm1lc3NhZ2UgKyBjb2RlXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDc3NTeW50YXhFcnJvclxuQ3NzU3ludGF4RXJyb3IuZGVmYXVsdCA9IENzc1N5bnRheEVycm9yXG4iXSwibmFtZXMiOlsicGljbyIsInJlcXVpcmUiLCJ0ZXJtaW5hbEhpZ2hsaWdodCIsIkNzc1N5bnRheEVycm9yIiwiRXJyb3IiLCJzZXRNZXNzYWdlIiwibWVzc2FnZSIsInBsdWdpbiIsImZpbGUiLCJsaW5lIiwiY29sdW1uIiwicmVhc29uIiwic2hvd1NvdXJjZUNvZGUiLCJjb2xvciIsInNvdXJjZSIsImNzcyIsImlzQ29sb3JTdXBwb3J0ZWQiLCJsaW5lcyIsInNwbGl0Iiwic3RhcnQiLCJNYXRoIiwibWF4IiwiZW5kIiwibWluIiwibGVuZ3RoIiwibWF4V2lkdGgiLCJTdHJpbmciLCJtYXJrIiwiYXNpZGUiLCJib2xkIiwiZ3JheSIsInJlZCIsImNyZWF0ZUNvbG9ycyIsInRleHQiLCJzdHIiLCJzbGljZSIsIm1hcCIsImluZGV4IiwibnVtYmVyIiwiZ3V0dGVyIiwic3BhY2luZyIsInJlcGxhY2UiLCJqb2luIiwidG9TdHJpbmciLCJjb2RlIiwibmFtZSIsImNvbnN0cnVjdG9yIiwiZW5kTGluZSIsImVuZENvbHVtbiIsImNhcHR1cmVTdGFja1RyYWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/css-syntax-error.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/node.js":
/*!******************************************!*\
  !*** ./node_modules/postcss/lib/node.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nlet { isClean, my } = __webpack_require__(/*! ./symbols */ \"(app-pages-browser)/./node_modules/postcss/lib/symbols.js\");\nlet CssSyntaxError = __webpack_require__(/*! ./css-syntax-error */ \"(app-pages-browser)/./node_modules/postcss/lib/css-syntax-error.js\");\nlet Stringifier = __webpack_require__(/*! ./stringifier */ \"(app-pages-browser)/./node_modules/postcss/lib/stringifier.js\");\nlet stringify = __webpack_require__(/*! ./stringify */ \"(app-pages-browser)/./node_modules/postcss/lib/stringify.js\");\nfunction cloneNode(obj, parent) {\n    let cloned = new obj.constructor();\n    for(let i in obj){\n        if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n            continue;\n        }\n        if (i === \"proxyCache\") continue;\n        let value = obj[i];\n        let type = typeof value;\n        if (i === \"parent\" && type === \"object\") {\n            if (parent) cloned[i] = parent;\n        } else if (i === \"source\") {\n            cloned[i] = value;\n        } else if (Array.isArray(value)) {\n            cloned[i] = value.map((j)=>cloneNode(j, cloned));\n        } else {\n            if (type === \"object\" && value !== null) value = cloneNode(value);\n            cloned[i] = value;\n        }\n    }\n    return cloned;\n}\nclass Node {\n    addToError(error) {\n        error.postcssNode = this;\n        if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n            let s = this.source;\n            error.stack = error.stack.replace(/\\n\\s{4}at /, \"$&\".concat(s.input.from, \":\").concat(s.start.line, \":\").concat(s.start.column, \"$&\"));\n        }\n        return error;\n    }\n    after(add) {\n        this.parent.insertAfter(this, add);\n        return this;\n    }\n    assign() {\n        let overrides = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        for(let name in overrides){\n            this[name] = overrides[name];\n        }\n        return this;\n    }\n    before(add) {\n        this.parent.insertBefore(this, add);\n        return this;\n    }\n    cleanRaws(keepBetween) {\n        delete this.raws.before;\n        delete this.raws.after;\n        if (!keepBetween) delete this.raws.between;\n    }\n    clone() {\n        let overrides = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        let cloned = cloneNode(this);\n        for(let name in overrides){\n            cloned[name] = overrides[name];\n        }\n        return cloned;\n    }\n    cloneAfter() {\n        let overrides = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        let cloned = this.clone(overrides);\n        this.parent.insertAfter(this, cloned);\n        return cloned;\n    }\n    cloneBefore() {\n        let overrides = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        let cloned = this.clone(overrides);\n        this.parent.insertBefore(this, cloned);\n        return cloned;\n    }\n    error(message) {\n        let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        if (this.source) {\n            let { end, start } = this.rangeBy(opts);\n            return this.source.input.error(message, {\n                column: start.column,\n                line: start.line\n            }, {\n                column: end.column,\n                line: end.line\n            }, opts);\n        }\n        return new CssSyntaxError(message);\n    }\n    getProxyProcessor() {\n        return {\n            get (node, prop) {\n                if (prop === \"proxyOf\") {\n                    return node;\n                } else if (prop === \"root\") {\n                    return ()=>node.root().toProxy();\n                } else {\n                    return node[prop];\n                }\n            },\n            set (node, prop, value) {\n                if (node[prop] === value) return true;\n                node[prop] = value;\n                if (prop === \"prop\" || prop === \"value\" || prop === \"name\" || prop === \"params\" || prop === \"important\" || /* c8 ignore next */ prop === \"text\") {\n                    node.markDirty();\n                }\n                return true;\n            }\n        };\n    }\n    markDirty() {\n        if (this[isClean]) {\n            this[isClean] = false;\n            let next = this;\n            while(next = next.parent){\n                next[isClean] = false;\n            }\n        }\n    }\n    next() {\n        if (!this.parent) return undefined;\n        let index = this.parent.index(this);\n        return this.parent.nodes[index + 1];\n    }\n    positionBy(opts, stringRepresentation) {\n        let pos = this.source.start;\n        if (opts.index) {\n            pos = this.positionInside(opts.index, stringRepresentation);\n        } else if (opts.word) {\n            stringRepresentation = this.toString();\n            let index = stringRepresentation.indexOf(opts.word);\n            if (index !== -1) pos = this.positionInside(index, stringRepresentation);\n        }\n        return pos;\n    }\n    positionInside(index, stringRepresentation) {\n        let string = stringRepresentation || this.toString();\n        let column = this.source.start.column;\n        let line = this.source.start.line;\n        for(let i = 0; i < index; i++){\n            if (string[i] === \"\\n\") {\n                column = 1;\n                line += 1;\n            } else {\n                column += 1;\n            }\n        }\n        return {\n            column,\n            line\n        };\n    }\n    prev() {\n        if (!this.parent) return undefined;\n        let index = this.parent.index(this);\n        return this.parent.nodes[index - 1];\n    }\n    rangeBy(opts) {\n        let start = {\n            column: this.source.start.column,\n            line: this.source.start.line\n        };\n        let end = this.source.end ? {\n            column: this.source.end.column + 1,\n            line: this.source.end.line\n        } : {\n            column: start.column + 1,\n            line: start.line\n        };\n        if (opts.word) {\n            let stringRepresentation = this.toString();\n            let index = stringRepresentation.indexOf(opts.word);\n            if (index !== -1) {\n                start = this.positionInside(index, stringRepresentation);\n                end = this.positionInside(index + opts.word.length, stringRepresentation);\n            }\n        } else {\n            if (opts.start) {\n                start = {\n                    column: opts.start.column,\n                    line: opts.start.line\n                };\n            } else if (opts.index) {\n                start = this.positionInside(opts.index);\n            }\n            if (opts.end) {\n                end = {\n                    column: opts.end.column,\n                    line: opts.end.line\n                };\n            } else if (opts.endIndex) {\n                end = this.positionInside(opts.endIndex);\n            } else if (opts.index) {\n                end = this.positionInside(opts.index + 1);\n            }\n        }\n        if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n            end = {\n                column: start.column + 1,\n                line: start.line\n            };\n        }\n        return {\n            end,\n            start\n        };\n    }\n    raw(prop, defaultType) {\n        let str = new Stringifier();\n        return str.raw(this, prop, defaultType);\n    }\n    remove() {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        this.parent = undefined;\n        return this;\n    }\n    replaceWith() {\n        for(var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++){\n            nodes[_key] = arguments[_key];\n        }\n        if (this.parent) {\n            let bookmark = this;\n            let foundSelf = false;\n            for (let node of nodes){\n                if (node === this) {\n                    foundSelf = true;\n                } else if (foundSelf) {\n                    this.parent.insertAfter(bookmark, node);\n                    bookmark = node;\n                } else {\n                    this.parent.insertBefore(bookmark, node);\n                }\n            }\n            if (!foundSelf) {\n                this.remove();\n            }\n        }\n        return this;\n    }\n    root() {\n        let result = this;\n        while(result.parent && result.parent.type !== \"document\"){\n            result = result.parent;\n        }\n        return result;\n    }\n    toJSON(_, inputs) {\n        let fixed = {};\n        let emitInputs = inputs == null;\n        inputs = inputs || new Map();\n        let inputsNextIndex = 0;\n        for(let name in this){\n            if (!Object.prototype.hasOwnProperty.call(this, name)) {\n                continue;\n            }\n            if (name === \"parent\" || name === \"proxyCache\") continue;\n            let value = this[name];\n            if (Array.isArray(value)) {\n                fixed[name] = value.map((i)=>{\n                    if (typeof i === \"object\" && i.toJSON) {\n                        return i.toJSON(null, inputs);\n                    } else {\n                        return i;\n                    }\n                });\n            } else if (typeof value === \"object\" && value.toJSON) {\n                fixed[name] = value.toJSON(null, inputs);\n            } else if (name === \"source\") {\n                let inputId = inputs.get(value.input);\n                if (inputId == null) {\n                    inputId = inputsNextIndex;\n                    inputs.set(value.input, inputsNextIndex);\n                    inputsNextIndex++;\n                }\n                fixed[name] = {\n                    end: value.end,\n                    inputId,\n                    start: value.start\n                };\n            } else {\n                fixed[name] = value;\n            }\n        }\n        if (emitInputs) {\n            fixed.inputs = [\n                ...inputs.keys()\n            ].map((input)=>input.toJSON());\n        }\n        return fixed;\n    }\n    toProxy() {\n        if (!this.proxyCache) {\n            this.proxyCache = new Proxy(this, this.getProxyProcessor());\n        }\n        return this.proxyCache;\n    }\n    toString() {\n        let stringifier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : stringify;\n        if (stringifier.stringify) stringifier = stringifier.stringify;\n        let result = \"\";\n        stringifier(this, (i)=>{\n            result += i;\n        });\n        return result;\n    }\n    warn(result, text, opts) {\n        let data = {\n            node: this\n        };\n        for(let i in opts)data[i] = opts[i];\n        return result.warn(text, data);\n    }\n    get proxyOf() {\n        return this;\n    }\n    constructor(defaults = {}){\n        this.raws = {};\n        this[isClean] = false;\n        this[my] = true;\n        for(let name in defaults){\n            if (name === \"nodes\") {\n                this.nodes = [];\n                for (let node of defaults[name]){\n                    if (typeof node.clone === \"function\") {\n                        this.append(node.clone());\n                    } else {\n                        this.append(node);\n                    }\n                }\n            } else {\n                this[name] = defaults[name];\n            }\n        }\n    }\n}\nmodule.exports = Node;\nNode.default = Node;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/node.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/stringifier.js":
/*!*************************************************!*\
  !*** ./node_modules/postcss/lib/stringifier.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst DEFAULT_RAW = {\n    after: \"\\n\",\n    beforeClose: \"\\n\",\n    beforeComment: \"\\n\",\n    beforeDecl: \"\\n\",\n    beforeOpen: \" \",\n    beforeRule: \"\\n\",\n    colon: \": \",\n    commentLeft: \" \",\n    commentRight: \" \",\n    emptyBody: \"\",\n    indent: \"    \",\n    semicolon: false\n};\nfunction capitalize(str) {\n    return str[0].toUpperCase() + str.slice(1);\n}\nclass Stringifier {\n    atrule(node, semicolon) {\n        let name = \"@\" + node.name;\n        let params = node.params ? this.rawValue(node, \"params\") : \"\";\n        if (typeof node.raws.afterName !== \"undefined\") {\n            name += node.raws.afterName;\n        } else if (params) {\n            name += \" \";\n        }\n        if (node.nodes) {\n            this.block(node, name + params);\n        } else {\n            let end = (node.raws.between || \"\") + (semicolon ? \";\" : \"\");\n            this.builder(name + params + end, node);\n        }\n    }\n    beforeAfter(node, detect) {\n        let value;\n        if (node.type === \"decl\") {\n            value = this.raw(node, null, \"beforeDecl\");\n        } else if (node.type === \"comment\") {\n            value = this.raw(node, null, \"beforeComment\");\n        } else if (detect === \"before\") {\n            value = this.raw(node, null, \"beforeRule\");\n        } else {\n            value = this.raw(node, null, \"beforeClose\");\n        }\n        let buf = node.parent;\n        let depth = 0;\n        while(buf && buf.type !== \"root\"){\n            depth += 1;\n            buf = buf.parent;\n        }\n        if (value.includes(\"\\n\")) {\n            let indent = this.raw(node, null, \"indent\");\n            if (indent.length) {\n                for(let step = 0; step < depth; step++)value += indent;\n            }\n        }\n        return value;\n    }\n    block(node, start) {\n        let between = this.raw(node, \"between\", \"beforeOpen\");\n        this.builder(start + between + \"{\", node, \"start\");\n        let after;\n        if (node.nodes && node.nodes.length) {\n            this.body(node);\n            after = this.raw(node, \"after\");\n        } else {\n            after = this.raw(node, \"after\", \"emptyBody\");\n        }\n        if (after) this.builder(after);\n        this.builder(\"}\", node, \"end\");\n    }\n    body(node) {\n        let last = node.nodes.length - 1;\n        while(last > 0){\n            if (node.nodes[last].type !== \"comment\") break;\n            last -= 1;\n        }\n        let semicolon = this.raw(node, \"semicolon\");\n        for(let i = 0; i < node.nodes.length; i++){\n            let child = node.nodes[i];\n            let before = this.raw(child, \"before\");\n            if (before) this.builder(before);\n            this.stringify(child, last !== i || semicolon);\n        }\n    }\n    comment(node) {\n        let left = this.raw(node, \"left\", \"commentLeft\");\n        let right = this.raw(node, \"right\", \"commentRight\");\n        this.builder(\"/*\" + left + node.text + right + \"*/\", node);\n    }\n    decl(node, semicolon) {\n        let between = this.raw(node, \"between\", \"colon\");\n        let string = node.prop + between + this.rawValue(node, \"value\");\n        if (node.important) {\n            string += node.raws.important || \" !important\";\n        }\n        if (semicolon) string += \";\";\n        this.builder(string, node);\n    }\n    document(node) {\n        this.body(node);\n    }\n    raw(node, own, detect) {\n        let value;\n        if (!detect) detect = own;\n        // Already had\n        if (own) {\n            value = node.raws[own];\n            if (typeof value !== \"undefined\") return value;\n        }\n        let parent = node.parent;\n        if (detect === \"before\") {\n            // Hack for first rule in CSS\n            if (!parent || parent.type === \"root\" && parent.first === node) {\n                return \"\";\n            }\n            // `root` nodes in `document` should use only their own raws\n            if (parent && parent.type === \"document\") {\n                return \"\";\n            }\n        }\n        // Floating child without parent\n        if (!parent) return DEFAULT_RAW[detect];\n        // Detect style by other nodes\n        let root = node.root();\n        if (!root.rawCache) root.rawCache = {};\n        if (typeof root.rawCache[detect] !== \"undefined\") {\n            return root.rawCache[detect];\n        }\n        if (detect === \"before\" || detect === \"after\") {\n            return this.beforeAfter(node, detect);\n        } else {\n            let method = \"raw\" + capitalize(detect);\n            if (this[method]) {\n                value = this[method](root, node);\n            } else {\n                root.walk((i)=>{\n                    value = i.raws[own];\n                    if (typeof value !== \"undefined\") return false;\n                });\n            }\n        }\n        if (typeof value === \"undefined\") value = DEFAULT_RAW[detect];\n        root.rawCache[detect] = value;\n        return value;\n    }\n    rawBeforeClose(root) {\n        let value;\n        root.walk((i)=>{\n            if (i.nodes && i.nodes.length > 0) {\n                if (typeof i.raws.after !== \"undefined\") {\n                    value = i.raws.after;\n                    if (value.includes(\"\\n\")) {\n                        value = value.replace(/[^\\n]+$/, \"\");\n                    }\n                    return false;\n                }\n            }\n        });\n        if (value) value = value.replace(/\\S/g, \"\");\n        return value;\n    }\n    rawBeforeComment(root, node) {\n        let value;\n        root.walkComments((i)=>{\n            if (typeof i.raws.before !== \"undefined\") {\n                value = i.raws.before;\n                if (value.includes(\"\\n\")) {\n                    value = value.replace(/[^\\n]+$/, \"\");\n                }\n                return false;\n            }\n        });\n        if (typeof value === \"undefined\") {\n            value = this.raw(node, null, \"beforeDecl\");\n        } else if (value) {\n            value = value.replace(/\\S/g, \"\");\n        }\n        return value;\n    }\n    rawBeforeDecl(root, node) {\n        let value;\n        root.walkDecls((i)=>{\n            if (typeof i.raws.before !== \"undefined\") {\n                value = i.raws.before;\n                if (value.includes(\"\\n\")) {\n                    value = value.replace(/[^\\n]+$/, \"\");\n                }\n                return false;\n            }\n        });\n        if (typeof value === \"undefined\") {\n            value = this.raw(node, null, \"beforeRule\");\n        } else if (value) {\n            value = value.replace(/\\S/g, \"\");\n        }\n        return value;\n    }\n    rawBeforeOpen(root) {\n        let value;\n        root.walk((i)=>{\n            if (i.type !== \"decl\") {\n                value = i.raws.between;\n                if (typeof value !== \"undefined\") return false;\n            }\n        });\n        return value;\n    }\n    rawBeforeRule(root) {\n        let value;\n        root.walk((i)=>{\n            if (i.nodes && (i.parent !== root || root.first !== i)) {\n                if (typeof i.raws.before !== \"undefined\") {\n                    value = i.raws.before;\n                    if (value.includes(\"\\n\")) {\n                        value = value.replace(/[^\\n]+$/, \"\");\n                    }\n                    return false;\n                }\n            }\n        });\n        if (value) value = value.replace(/\\S/g, \"\");\n        return value;\n    }\n    rawColon(root) {\n        let value;\n        root.walkDecls((i)=>{\n            if (typeof i.raws.between !== \"undefined\") {\n                value = i.raws.between.replace(/[^\\s:]/g, \"\");\n                return false;\n            }\n        });\n        return value;\n    }\n    rawEmptyBody(root) {\n        let value;\n        root.walk((i)=>{\n            if (i.nodes && i.nodes.length === 0) {\n                value = i.raws.after;\n                if (typeof value !== \"undefined\") return false;\n            }\n        });\n        return value;\n    }\n    rawIndent(root) {\n        if (root.raws.indent) return root.raws.indent;\n        let value;\n        root.walk((i)=>{\n            let p = i.parent;\n            if (p && p !== root && p.parent && p.parent === root) {\n                if (typeof i.raws.before !== \"undefined\") {\n                    let parts = i.raws.before.split(\"\\n\");\n                    value = parts[parts.length - 1];\n                    value = value.replace(/\\S/g, \"\");\n                    return false;\n                }\n            }\n        });\n        return value;\n    }\n    rawSemicolon(root) {\n        let value;\n        root.walk((i)=>{\n            if (i.nodes && i.nodes.length && i.last.type === \"decl\") {\n                value = i.raws.semicolon;\n                if (typeof value !== \"undefined\") return false;\n            }\n        });\n        return value;\n    }\n    rawValue(node, prop) {\n        let value = node[prop];\n        let raw = node.raws[prop];\n        if (raw && raw.value === value) {\n            return raw.raw;\n        }\n        return value;\n    }\n    root(node) {\n        this.body(node);\n        if (node.raws.after) this.builder(node.raws.after);\n    }\n    rule(node) {\n        this.block(node, this.rawValue(node, \"selector\"));\n        if (node.raws.ownSemicolon) {\n            this.builder(node.raws.ownSemicolon, node, \"end\");\n        }\n    }\n    stringify(node, semicolon) {\n        /* c8 ignore start */ if (!this[node.type]) {\n            throw new Error(\"Unknown AST node type \" + node.type + \". \" + \"Maybe you need to change PostCSS stringifier.\");\n        }\n        /* c8 ignore stop */ this[node.type](node, semicolon);\n    }\n    constructor(builder){\n        this.builder = builder;\n    }\n}\nmodule.exports = Stringifier;\nStringifier.default = Stringifier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/stringifier.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/stringify.js":
/*!***********************************************!*\
  !*** ./node_modules/postcss/lib/stringify.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nlet Stringifier = __webpack_require__(/*! ./stringifier */ \"(app-pages-browser)/./node_modules/postcss/lib/stringifier.js\");\nfunction stringify(node, builder) {\n    let str = new Stringifier(builder);\n    str.stringify(node);\n}\nmodule.exports = stringify;\nstringify.default = stringify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9zdHJpbmdpZnkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixTQUFTQyxVQUFVQyxJQUFJLEVBQUVDLE9BQU87SUFDOUIsSUFBSUMsTUFBTSxJQUFJTCxZQUFZSTtJQUMxQkMsSUFBSUgsU0FBUyxDQUFDQztBQUNoQjtBQUVBRyxPQUFPQyxPQUFPLEdBQUdMO0FBQ2pCQSxVQUFVTSxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9zdHJpbmdpZnkuanM/ZDdjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubGV0IFN0cmluZ2lmaWVyID0gcmVxdWlyZSgnLi9zdHJpbmdpZmllcicpXG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShub2RlLCBidWlsZGVyKSB7XG4gIGxldCBzdHIgPSBuZXcgU3RyaW5naWZpZXIoYnVpbGRlcilcbiAgc3RyLnN0cmluZ2lmeShub2RlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ2lmeVxuc3RyaW5naWZ5LmRlZmF1bHQgPSBzdHJpbmdpZnlcbiJdLCJuYW1lcyI6WyJTdHJpbmdpZmllciIsInJlcXVpcmUiLCJzdHJpbmdpZnkiLCJub2RlIiwiYnVpbGRlciIsInN0ciIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/stringify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/postcss/lib/symbols.js":
/*!*********************************************!*\
  !*** ./node_modules/postcss/lib/symbols.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports.isClean = Symbol(\"isClean\");\nmodule.exports.my = Symbol(\"my\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9zeW1ib2xzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLHNCQUFzQixHQUFHRyxPQUFPO0FBRWhDSCxpQkFBaUIsR0FBR0csT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvc3ltYm9scy5qcz9iMGNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cy5pc0NsZWFuID0gU3ltYm9sKCdpc0NsZWFuJylcblxubW9kdWxlLmV4cG9ydHMubXkgPSBTeW1ib2woJ215JylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaXNDbGVhbiIsIlN5bWJvbCIsIm15Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/postcss/lib/symbols.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/pages/Main.tsx":
/*!****************************!*\
  !*** ./app/pages/Main.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_GameArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/GameArea */ \"(app-pages-browser)/./app/components/GameArea.tsx\");\n/* harmony import */ var _components_Leaderboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Leaderboard */ \"(app-pages-browser)/./app/components/Leaderboard.tsx\");\n/* harmony import */ var postcss_lib_comment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! postcss/lib/comment */ \"(app-pages-browser)/./node_modules/postcss/lib/comment.js\");\n/* harmony import */ var postcss_lib_comment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(postcss_lib_comment__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst Main = (param)=>{\n    let { currentGame, setCurrentGame } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GameArea__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ryan/code/minigames/client/app/pages/Main.tsx\",\n                lineNumber: 14,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Leaderboard__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ryan/code/minigames/client/app/pages/Main.tsx\",\n                lineNumber: 15,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((postcss_lib_comment__WEBPACK_IMPORTED_MODULE_4___default()), {}, void 0, false, {\n                fileName: \"/home/ryan/code/minigames/client/app/pages/Main.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/ryan/code/minigames/client/app/pages/Main.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Main;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Main);\nvar _c;\n$RefreshReg$(_c, \"Main\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlcy9NYWluLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUI7QUFDcUI7QUFDTTtBQUNUO0FBT3pDLE1BQU1JLE9BQXdCO1FBQUMsRUFBRUMsV0FBVyxFQUFFQyxjQUFjLEVBQUU7SUFDOUQscUJBQ0UsOERBQUNDOzswQkFDRyw4REFBQ04sNERBQVFBOzs7OzswQkFDVCw4REFBQ0MsK0RBQVdBOzs7OzswQkFDWiw4REFBQ0MsNERBQVFBOzs7Ozs7Ozs7OztBQUdqQjtLQVJRQztBQVVSLCtEQUFlQSxJQUFJQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9wYWdlcy9NYWluLnRzeD80ZGUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBHYW1lQXJlYSBmcm9tICcuLi9jb21wb25lbnRzL0dhbWVBcmVhJztcbmltcG9ydCBMZWFkZXJib2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0xlYWRlcmJvYXJkJztcbmltcG9ydCBDb21tZW50cyBmcm9tICdwb3N0Y3NzL2xpYi9jb21tZW50JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgICBjdXJyZW50R2FtZTogc3RyaW5nO1xuICAgIHNldEN1cnJlbnRHYW1lOiBhbnk7XG4gIH1cbiAgXG4gIGNvbnN0IE1haW46IFJlYWN0LkZDPFByb3BzPiA9ICh7IGN1cnJlbnRHYW1lLCBzZXRDdXJyZW50R2FtZSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgICAgPEdhbWVBcmVhIC8+XG4gICAgICAgIDxMZWFkZXJib2FyZCAvPlxuICAgICAgICA8Q29tbWVudHMgLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNYWluIl0sIm5hbWVzIjpbIlJlYWN0IiwiR2FtZUFyZWEiLCJMZWFkZXJib2FyZCIsIkNvbW1lbnRzIiwiTWFpbiIsImN1cnJlbnRHYW1lIiwic2V0Q3VycmVudEdhbWUiLCJkaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/pages/Main.tsx\n"));

/***/ })

});